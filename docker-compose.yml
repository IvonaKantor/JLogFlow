version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  networks:
    -

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on: zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    networks:
      -

  postgres:
    container_name: postgres

  log-listener:
    build:
      context: ./log-listener
      dockerfile: Dockerfile
    container_name: log-listener
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      QUARKUS_HTTP_PORT: 8081
      QUARKUS_LOG_LEVEL: INFO
    ports:
      - "8081:8081"
    networks:
      -
    restart: unless-stopped

  log-processing:
    build:
      context: ./log-processing
      dockerfile: Dockerfile
    container_name: log-processing
    depends_on:
      - kafka
      - postgres

  telemetry:
    build: ./telemetry

  web-server:
    build: ./web-server
    ports:
      - "8080:8080"

  web-app:
    build: ./web-app
    ports:
      - "8080:8080"
    depends_on:
      - web-server
